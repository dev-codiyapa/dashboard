{"version":3,"sources":["static/images/virus.svg","static/images/india.png","components/covid/summary/SummaryChart.component.tsx","components/covid/summary/Summary.component.tsx","utils/timeZoneCOnversion.ts","components/menu/Menu.component.tsx","components/search/Search.component.tsx","components/profile/Profile.component.tsx","components/notfication/Notification.component.tsx","components/header/Header.component.tsx","components/Footer/Footer.component.tsx","Layout/LayoutContent.component.tsx","Layout/Layout.component.tsx","pages/home/Home.component.tsx","components/covid/detail/Details.component.tsx","pages/details/Details.component.tsx","components/contact-us/ContactUs.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","SummaryChart","props","useState","summaryData","setSummaryData","useEffect","fetch","then","response","json","data","console","log","name","caseData","i","length","corfirmed","Confirmed","recovered","Recovered","active","Active","deaths","Deaths","newData","Number","push","getSummaryDataForGraph","catch","error","className","span","width","height","type","dataKey","stroke","strokeWidth","Summary","state","requiredDate","date","Date","now_utc","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","convertUTCDateToLocalDate","toISOString","setState","totalResult","this","totalNumberOfUpdateCovidResult","updateCovidResult","confirmed","updatedResult","getSummaryData","gutter","xs","sm","md","lg","style","marginTop","marginBottom","message","showIcon","toLocaleString","React","Component","Sider","Layout","SieBarMenu","Menu","SubMenu","collapsed","trigger","collapsible","src","require","float","theme","mode","defaultSelectedKeys","Item","key","icon","SnippetsOutlined","title","to","TableOutlined","SettingOutlined","PhoneOutlined","Search","visible","setVisible","wrapperRef","useRef","document","addEventListener","handleClickOutside","removeEventListener","event","targetClassName","target","nodeName","size","SearchOutlined","onClick","footer","closable","mask","placeholder","suffix","ref","Profile","color","fontWeight","fontSize","shape","background","marginLeft","Profilenofitication","BellOutlined","Header","PageHeader","padding","toggle","MenuUnfoldOutlined","MenuFoldOutlined","href","HomeOutlined","Footer","PageFooter","margin","Content","PageContent","minHeight","componentName","PageLayout","Home","CovidTableView","columns","dataIndex","ellipsis","editable","render","text","responseData","obj","id","total","cured","deceased","death","components","dataSource","bordered","CovidDetailsReport","ContactUs","App","handleWindowSizeChange","window","innerWidth","isSmallScreenWith","basename","exact","path","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aac4b236.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/virus.4d3a07a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/india.d51ec02e.png\";","import React, { useEffect, useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\nimport { Col } from \"antd\";\nimport { ISummaryChartProps } from \"./interfaces\";\n\nconst SummaryChart: React.FC<ISummaryChartProps> = props => {\n  let [summaryData, setSummaryData]: Array<any> = useState([]);\n\n  const getSummaryDataForGraph = (data: any) => {\n    let name: string | number = \"0\";\n    let caseData = [];\n    for (var i = 0; i < data.length; i++) {\n      const corfirmed = data[i] && data[i].Confirmed;\n      const recovered = data[i] && data[i].Recovered;\n      const active = data[i] && data[i].Active;\n      const deaths = data[i] && data[i].Deaths;\n      name += \"data\";\n      name = Number(name) + 1;\n      let newData: { [PropName: string]: any } = {\n        name: name,\n        corfirmed: corfirmed,\n        recovered: recovered,\n        active: active,\n        deaths: deaths\n      };\n      caseData.push(newData);\n    }\n    setSummaryData(caseData);\n  };\n\n  //-alternative of componentdidmount in functional component\n  useEffect(() => {\n    fetch(`https://api.covid19api.com/country/india`)\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        console.log(\"prepared data for display =====>\", data);\n        getSummaryDataForGraph(data);\n      })\n      .catch(error => {\n        console.log(\"something went wrong while fetching API\");\n      });\n  }, []);\n\n  return (\n    <>\n      {summaryData && summaryData.length ? (\n        <>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"summary-chart-box\">\n              <p className=\"summary-chart-box-title text-danger\">Confirmed</p>\n              <LineChart width={300} height={100} data={summaryData}>\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"corfirmed\"\n                  stroke=\"#cf1322\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"summary-chart-box\">\n              <p className=\"summary-chart-box-title text-primary\">Active</p>\n              <LineChart width={300} height={100} data={summaryData}>\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"deaths\"\n                  stroke=\"#8884d8\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </div>\n          </Col>\n\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"summary-chart-box\">\n              <p className=\"summary-chart-box-title text-success\">Recovered</p>\n              <LineChart width={300} height={100} data={summaryData}>\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"active\"\n                  stroke=\"#7cb305\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"summary-chart-box\">\n              <p className=\"summary-chart-box-title text-warning\">Deceased</p>\n              <LineChart width={300} height={100} data={summaryData}>\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"recovered\"\n                  stroke=\"#faad14\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </div>\n          </Col>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default SummaryChart;\n","import React from \"react\";\nimport { convertUTCDateToLocalDate } from \"../../../utils/timeZoneCOnversion\";\nimport { Row, Col, Card, Alert } from \"antd\";\nimport \"./Summary.component.css\";\nimport SummaryChart from \"../../covid/summary/SummaryChart.component\";\n\nclass Summary extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    let date = convertUTCDateToLocalDate(new Date());\n    let requiredDate = date.toISOString();\n    fetch(\n      `https://api.covid19api.com/country/india?from=${requiredDate}&to=${requiredDate}`\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({\n          data: data\n        });\n      })\n      .catch(error => {\n        console.log(\"something went wrong while fetching API\");\n      });\n  }\n\n  getSummaryData() {\n    const totalResult = this.state.data;\n    const totalNumberOfUpdateCovidResult = totalResult && totalResult.length;\n    let updateCovidResult =\n      totalNumberOfUpdateCovidResult &&\n      totalResult[totalNumberOfUpdateCovidResult - 1];\n    const confirmed = updateCovidResult && updateCovidResult.Confirmed;\n    const recovered = updateCovidResult && updateCovidResult.Recovered;\n    const active = updateCovidResult && updateCovidResult.Active;\n    const deaths = updateCovidResult && updateCovidResult.Deaths;\n    return {\n      confirmed: confirmed,\n      Recovered: recovered,\n      active: active,\n      deaths: deaths\n    };\n  }\n\n  render() {\n    let updatedResult = this.getSummaryData();\n    return (\n      <>\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n          <Col span={24} style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n            <Alert\n              message=\"If you have had COVID, and if you would like to share your story please write at survivor@covidindia.org. \"\n              type=\"success\"\n              showIcon\n            />\n          </Col>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"confirm-case-box\">\n              <Card>\n                <p className=\"title text-danger\">Confirmed</p>\n                <p className=\"text-danger text-num\">\n                  {updatedResult &&\n                    updatedResult.confirmed &&\n                    updatedResult.confirmed.toLocaleString(\"en-in\")}\n                </p>\n              </Card>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"active-case-box\">\n              <Card>\n                <p className=\"title text-primary\">Active</p>\n                <p className=\"text-primary text-num\">\n                  {updatedResult &&\n                    updatedResult.active &&\n                    updatedResult.active.toLocaleString(\"en-in\")}\n                </p>\n              </Card>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"recovered-case-box\">\n              <Card>\n                <p className=\"title text-success\">Recovered</p>\n                <p className=\"text-success text-num\">\n                  {updatedResult &&\n                    updatedResult.Recovered &&\n                    updatedResult.Recovered.toLocaleString(\"en-in\")}\n                </p>\n              </Card>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"death-case-box\">\n              <Card>\n                <p className=\"title text-warning\">Deceased</p>\n                <p className=\"text-warning text-num\">\n                  {updatedResult &&\n                    updatedResult.deaths &&\n                    updatedResult.deaths.toLocaleString(\"en-in\")}\n                </p>\n              </Card>\n            </div>\n          </Col>\n        </Row>\n        <Row\n          gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\n          style={{ marginTop: \"80px\" }}\n        >\n          <SummaryChart />\n        </Row>\n      </>\n    );\n  }\n}\nexport default Summary;\n","export const convertUTCDateToLocalDate = (date: Date) => {\n  var date = new Date();\n  var now_utc = Date.UTC(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds()\n  );\n\n  return new Date(now_utc);\n};\n","import React from \"react\";\nimport { Menu, Layout } from \"antd\";\nimport {\n  SnippetsOutlined,\n  TableOutlined,\n  PhoneOutlined,\n  SettingOutlined\n} from \"@ant-design/icons\";\nimport \"./Menu.component.css\";\nimport { Link } from \"react-router-dom\";\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass SieBarMenu extends React.Component<any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    console.log(\"current props values\", this.props.collapsed);\n    return (\n      <Sider\n        trigger={null}\n        collapsible\n        collapsed={this.props.collapsed}\n        className=\"sidebar\"\n      >\n        <div className=\"logo\">\n          {!this.props.collapsed ? (\n            <>\n              <span></span>\n              <img\n                src={require(\"../../static/images/virus.svg\")}\n                width=\"20px\"\n                style={{ float: \"left\" }}\n              />{\" \"}\n              <span>Covid-19 Dashboard</span>{\" \"}\n            </>\n          ) : (\n            <img src={require(\"../../static/images/virus.svg\")} width=\"25px\" />\n          )}\n        </div>\n        <Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultSelectedKeys={[\"1\"]}\n          style={{ marginTop: \"20px\" }}\n        >\n          <Menu.Item key=\"1\" icon={<SnippetsOutlined />} title=\"Summary\">\n            <Link to=\"/\">Summary</Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<TableOutlined />} title=\"Deatils\">\n            <Link to=\"detailed_view\">Detailed view</Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<SettingOutlined />} title=\"others\">\n            <Link to=\"others_view\">Others info</Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\" icon={<PhoneOutlined />} title=\"contactUs\">\n            <Link to=\"contact_us\">Contact Us</Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n  }\n}\nexport default SieBarMenu;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { Input, Avatar } from \"antd\";\nimport \"./Search.component.css\";\nimport { ISearchProps } from \"./interfaces\";\n\nconst Search: React.FC<ISearchProps> = props => {\n  let [visible, setVisible] = useState(false);\n  let wrapperRef: any = useRef(null);\n  const openSearchModal = () => {\n    setVisible(true);\n  };\n  const search = () => {\n    console.log(\"search something\");\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, [visible]);\n\n  const handleClickOutside = (event: any) => {\n    let targetClassName = event.target.nodeName;\n    if (targetClassName !== \"INPUT\" && targetClassName !== \"svg\") {\n      setVisible(false);\n    }\n  };\n\n  return (\n    <>\n      <span>\n        <Avatar\n          size=\"small\"\n          icon={<SearchOutlined onClick={openSearchModal} />}\n        />\n        <Modal\n          visible={visible}\n          footer={null}\n          closable={false}\n          mask={false}\n          className=\"search-modal\"\n        >\n          <Input\n            placeholder=\"Search\"\n            className=\"search-box\"\n            suffix={<SearchOutlined onClick={search} />}\n            ref={wrapperRef}\n          />\n        </Modal>\n      </span>\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Avatar, Divider, Badge } from \"antd\";\nimport { IProfile } from \"./interfaces\";\nimport \"./Profile.component.css\";\n\nconst Profile: React.FC<IProfile> = () => {\n  const openProfile = () => {\n    console.log(\"open profile\");\n  };\n  return (\n    <>\n      <a onClick={openProfile} className=\"header-profile\">\n        <Divider type=\"vertical\"  />\n        <span style={{ color: \"#ccc\", fontWeight: 700, fontSize: \"12px\" }}>\n          India\n        </span>\n        <Avatar\n          shape=\"circle\"\n          src={require(\"../../static/images/india.png\")}\n          style={{ background: \"#ddd\", marginLeft: \"10px\" }}\n        />\n      </a>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { BellOutlined } from \"@ant-design/icons\";\nimport { Avatar } from \"antd\";\n\nconst Profilenofitication: React.FC<any> = () => {\n  return (\n    <>\n      {\" \"}\n      <Avatar size=\"small\" icon={<BellOutlined />} />\n    </>\n  );\n};\n\nexport default Profilenofitication;\n","import React from \"react\";\nimport \"./Header.component.css\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  HomeOutlined\n} from \"@ant-design/icons\";\nimport { Layout, Row, Col, Avatar } from \"antd\";\nimport Search from \"../../components/search/Search.component\";\nimport Profile from \"../../components/profile/Profile.component\";\nimport Profilenofitication from \"../../components/notfication/Notification.component\";\nimport { IPageHeaderProps } from \"./interfaces\";\n\nconst { Header } = Layout;\n\nconst PageHeader: React.FC<IPageHeaderProps> = (props: any) => {\n  return (\n    <>\n      <Header\n        className=\"site-layout-background page-header\"\n        style={{ padding: 0 }}\n      >\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n          <Col className=\"gutter-row\" span={12}>\n            <ul className=\"header-left-section\">\n              <li>\n                <a className=\"trigger\" onClick={props.toggle}>\n                  {props.collapsed ? (\n                    <MenuUnfoldOutlined />\n                  ) : (\n                    <MenuFoldOutlined />\n                  )}\n                </a>\n              </li>\n              <li>\n                <a href=\"/\">\n                  <Avatar size=\"small\" icon={<HomeOutlined />} />\n                </a>\n              </li>\n            </ul>\n          </Col>\n          <Col className=\"gutter-row\" span={12}>\n            <ul className=\"header-right-section\">\n              <li>\n                <Search />\n              </li>\n              <li>\n                <Profilenofitication />\n              </li>\n              <li>\n                <Profile />\n              </li>\n            </ul>\n          </Col>\n        </Row>\n      </Header>\n    </>\n  );\n};\n\nexport default PageHeader;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport \"./Footer.component.css\";\n\nconst { Footer } = Layout;\n\nconst PageFooter: React.FC<any> = () => {\n  return (\n    <>\n      <Footer style={{ background: \"#fff\", margin: \"0px 16px 10px 16px\" }} className=\"footer-section\">\n        <p>@2020 Dev-codiyapa | All right reserved</p>\n      </Footer>\n    </>\n  );\n};\n\nexport default PageFooter;\n","import React from \"react\";\nimport { IPageContentProps } from \"./interfaces\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nconst PageContent: React.FC<IPageContentProps> = (props: any) => {\n  return (\n    <Content\n      className=\"site-layout-background\"\n      style={{\n        margin: \"24px 16px\",\n        padding: 24,\n        minHeight: 280\n      }}\n    >\n      {props.componentName}\n    </Content>\n  );\n};\nexport default PageContent;\n","import React, { Component } from \"react\";\nimport { ILayoutprops, ILayoutstate } from \"./interfaces\";\nimport SieBarMenu from \"../components/menu/Menu.component\";\nimport PageHeader from \"../components/header/Header.component\";\nimport { Layout } from \"antd\";\nimport \"./Layout.component.css\";\nimport PageFooter from \"../components/Footer/Footer.component\";\nimport PageContent from \"./LayoutContent.component\";\n\nclass PageLayout extends Component<ILayoutprops, ILayoutstate> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      collapsed: false\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Layout className=\"home-page\">\n          <SieBarMenu collapsed={this.state.collapsed} />\n          <Layout className=\"site-layout\">\n            <PageHeader toggle={this.toggle} collapsed={this.state.collapsed} />\n            <PageContent componentName={this.props.componentName}></PageContent>\n            <PageFooter />\n          </Layout>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default PageLayout;\n","import React, { Component } from \"react\";\nimport { IHomeprops, IHomestate } from \"./interfaces\";\nimport \"./Home.component.css\";\nimport Summary from \"../../components/covid/summary/Summary.component\";\nimport PageLayout from \"../../Layout/Layout.component\";\n\nclass Home extends Component<IHomeprops, IHomestate> {\n  render() {\n    return <PageLayout componentName={<Summary />} />;\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { ICovidTableViewProps, ICovidTableViewState } from \"./interfaces\";\nimport { Table } from \"antd\";\nimport \"./Details.component.css\";\n\nclass CovidTableView extends React.Component<\n  ICovidTableViewProps,\n  ICovidTableViewState\n> {\n  columns: any;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    this.columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        width: \"8.5%\",\n        ellipsis: true,\n        editable: true,\n        render: (text: any) => {\n          return (\n            <span>\n              <strong>{text}</strong>\n            </span>\n          );\n        }\n      },\n      {\n        title: \"Confirmed\",\n        dataIndex: \"confirmed\",\n        width: \"8.5%\",\n        ellipsis: true,\n        editable: true,\n        render: (text: any) => {\n          return (\n            <span className=\"text-danger\">\n              <strong>{text.toLocaleString(\"en-in\")}</strong>\n            </span>\n          );\n        }\n      },\n      {\n        title: \"Active\",\n        dataIndex: \"active\",\n        editable: true,\n        ellipsis: true,\n        width: \"12%\",\n        render: (text: any) => {\n          return (\n            <span className=\"text-info\">\n              <strong>{text.toLocaleString(\"en-in\")}</strong>\n            </span>\n          );\n        }\n      },\n      {\n        title: \"Recovered\",\n        dataIndex: \"recovered\",\n        ellipsis: true,\n        editable: true,\n        width: \"6%\",\n        render: (text: any) => {\n          return (\n            <span className=\"text-success\">\n              <strong>{text.toLocaleString(\"en-in\")}</strong>\n            </span>\n          );\n        }\n      },\n      {\n        title: \"Deceased\",\n        dataIndex: \"deceased\",\n        ellipsis: true,\n        editable: true,\n        width: \"6%\",\n        render: (text: any) => {\n          return (\n            <span className=\"text-warning\">\n              <strong>{text.toLocaleString(\"en-in\")}</strong>\n            </span>\n          );\n        }\n      }\n    ];\n  }\n  componentDidMount() {\n    console.log(\"call API to get data state wise\");\n    fetch(\"http://covid19-india-adhikansh.herokuapp.com/states\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        let responseData = data && data.state;\n        let newData: Array<any> = [];\n        for (let i = 0; i < responseData.length; i++) {\n          let obj = {\n            key: responseData[i] && responseData[i].id,\n            name: responseData[i] && responseData[i].name,\n            confirmed: responseData[i] && responseData[i].total,\n            active: responseData[i] && responseData[i].active,\n            recovered: responseData[i] && responseData[i].cured,\n            deceased: responseData[i] && responseData[i].death\n          };\n          newData.push(obj);\n        }\n        this.setState({\n          data: newData\n        });\n      })\n      .catch(error => {\n        console.log(\n          \"something went wrong while fetching state wise corona data\"\n        );\n      });\n  }\n  render() {\n    const components = {};\n    let data = this.state.data;\n    return (\n      <>\n        <Table\n          components={components}\n          dataSource={data}\n          columns={this.columns}\n          className=\"pf-editable-table\"\n          bordered\n        />\n      </>\n    );\n  }\n}\n\nexport default CovidTableView;\n","import React from \"react\";\nimport CovidTableView from \"../../components/covid/detail/Details.component\";\nimport { ICovidDetailsReportProps } from \"./interfaces\";\nimport PageLayout from \"../../Layout/Layout.component\";\n\nconst CovidDetailsReport: React.FC<ICovidDetailsReportProps> = (props: any) => {\n  return <PageLayout componentName={<CovidTableView />} />;\n};\n\nexport default CovidDetailsReport;\n","import React from \"react\";\nimport { IContactUsProps } from \"./interfaces\";\nimport PageLayout from \"../../Layout/Layout.component\";\n\nconst ContactUs: React.FC<IContactUsProps> = () => {\n  return <PageLayout componentName={<></>} />;\n};\n\nexport default ContactUs;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/home/Home.component\";\nimport \"antd/dist/antd.css\";\nimport {\n  HashRouter,\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport CovidDetailsReport from \"./pages/details/Details.component\";\nimport ContactUs from \"./components/contact-us/ContactUs.component\";\ninterface IAppState {\n  width: number;\n}\ninterface IAppProps {}\n\nclass App extends React.Component<IAppProps, IAppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      width: window.innerWidth\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowSizeChange);\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n  render() {\n    const width = this.state.width;\n    const isSmallScreenWith = width <= 1335;\n    return (\n      <>\n        {!isSmallScreenWith ? (\n          <Router basename=\"/\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/detailed_view\">\n                <CovidDetailsReport />\n              </Route>\n              <Route path=\"/contact_us\">\n                <ContactUs />\n              </Route>\n              <Route path=\"/others_view\">\n                <ContactUs />\n              </Route>\n            </Switch>\n          </Router>\n        ) : (\n          <>\n            <h2\n              className=\"text-center text-info\"\n              style={{ marginTop: \"300px\" }}\n            >\n              {\" \"}\n              Cureently, we are not supporting small screen devices.\n            </h2>\n            <h3 className=\"text-center text-warning\">\n              Please use desktop to view proper results.{\" \"}\n            </h3>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}